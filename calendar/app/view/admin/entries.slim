table.table.table-striped
  thead
    tr
      th
        button.btn.btn-small.btn-info onClick="CRUDModal();" New Entry
      th
        - if @items.size > 0
          | Occur at
      th

  - @items.each do |item|
    tr
      td = item.name
      td = item.date
      td
        a.btn.btn-small href="#" onClick="CRUDModal('#{item.name}', '#{item.occur_at.strftime('%Y-%m-%d')}', '#{item.occur_at.strftime('%H:%M')}', #{item.id} );" Edit

#CRUDModal.modal.fade
  .modal-body
    form.form-horizontal#CRUDModal-form
      .control-group
        label.control-label Name
        .controls
          input#CRUDModal-name type="text" name="name"
      .control-group
        label.control-label Occur at
        .controls
          input#CRUDModal-date type="text" name="occur_at"
          | &nbsp;
          input#CRUDModal-time type="text" style="width: 50px;"

    .alert.alert-error.hide#CRUDModal-errors
  .modal-footer
    .row
      .span
        button.btn.btn-danger type="button" onClick="if(confirm('This action can NOT be undone! Continue?')) CRUDSendDeleteRequest();" Delete
      .span.pull-right
        button.btn type="button" data-dismiss="modal" Cancel
        button.btn.btn-info type="button" onClick="CRUDSendRequest();" Save

input.hide#date value=@ymd.join('-')

javascript:
  $(function(){
    $('#CRUDModal-date').datepicker({format: 'yyyy-mm-dd', autoclose: true});
  });
  function CRUDModal(name, date, time, id) {
    var form = $('#CRUDModal-form');
    var url  = '#{route(:crud)}';
    if(id == undefined) {
      var request_method = 'POST';
    } else {
      var url = url + '/' + id;
      var request_method = 'PUT';
    }
    $('#CRUDModal-form').attr('action', url).attr('method', request_method);
    $('#CRUDModal-name').val(name || '');
    $('#CRUDModal-date').val(date || $('#date').val());
    $('#CRUDModal-time').val(time || '00:00');
    $('#CRUDModal-errors').hide();
    $('#CRUDModal').modal();
  }
  function CRUDSendRequest(data) {
    var form = $('#CRUDModal-form');
    var url  = form.attr('action');
    var type = form.attr('method');
    var date = $('#CRUDModal-date').val();
    var time = $('#CRUDModal-time').val();
    $('#CRUDModal-date').val( date.split(/\s+/)[0] + ' ' + time );
    var data = data || form.serialize();
    $.ajax({
      url:  url,
      type: type,
      data: data,
      complete: function(jqXHR, textStatus) {
        if(textStatus == "success") {
          $('#CRUDModal').modal('hide');
          updateEntries($('#date').val());
        } else {
          var error = jqXHR.responseText.replace(/[^\w|\d|\n|\s]/g, function (chr) {
            return '&#' + chr.charCodeAt(0) + ';'; 
          });
          $('#CRUDModal-errors').html(error).show();
        }
      }
    });
  }
  function CRUDSendDeleteRequest(){
    $('#CRUDModal-form').attr('method', 'DELETE');
    CRUDSendRequest({occur_at: $('#date').val()});
  }
